! Computational domain
NIHALO = 3         ! size of the memory halos on each side
NJHALO = 3
NIGLOBAL = 400     ! grid points in the zonal directions of the physical domain
NJGLOBAL = 250     ! grid points in the meridional directions of the physical domain
LAYOUT = 20, 12
IO_LAYOUT = 1, 1

NK = 72            ! number of vertical layers

TOPO_CONFIG = "file"             ! read topography from the file specified by TOPO_FILE
TOPO_FILE = "topog.nc"           ! the file from which topography is read
TOPO_VARNAME = "depth"           ! name of bathymetry variable in TOPO_FILE

! Sponge config
SPONGE = False                     ! apply sponges in the domain
SPONGE_CONFIG = "file"            ! read sponge config from file
SPONGE_DAMPING_FILE = "sponge.nc" ! file containing damping rates
SPONGE_STATE_FILE = "sponge.nc"   ! file containing state to damp toward
SPONGE_PTEMP_VAR = "PTEMP"        ! default = "PTEMP"
                                  ! The name of the potential temperature variable in
                                  ! SPONGE_STATE_FILE.
SPONGE_SALT_VAR = "SALT"          ! default = "SALT"
                                  ! The name of the salinity variable in
                                  ! SPONGE_STATE_FILE.
SPONGE_ETA_VAR = "ETA"            ! default = "ETA"
                                  ! The name of the interface height variable in
                                  ! SPONGE_STATE_FILE.
SPONGE_IDAMP_VAR = "IDAMP"        ! default = "IDAMP"
                                  ! The name of the inverse damping rate variable in
                                  ! SPONGE_DAMPING_FILE.

! Horizontal grid parameters
GRID_CONFIG = "cartesian"       ! Cartesian grid
                                ! A character string that determines the method for
                                ! defining the horizontal grid.  Current options are:
                                !     mosaic - read the grid from a mosaic (supergrid)
                                !              file set by GRID_FILE.
                                !     cartesian - use a (flat) Cartesian grid.
                                !     spherical - use a simple spherical grid.
                                !     mercator - use a Mercator spherical grid.
AXIS_UNITS = "k"                ! default = "degrees"
                                ! The units for the Cartesian axes. Valid entries are:
                                !     degrees - degrees of latitude and longitude
                                !     m - meters
                                !     k - kilometers
SOUTHLAT = -1250.0              !   [k]
                                ! The southern latitude of the domain or the equivalent
                                ! starting value for the y-axis.
WESTLON = -2000.0               !   [k] default = 0.0
                                ! The western longitude of the domain or the equivalent
                                ! starting value for the x-axis.

LENLAT = 2500.0                 !   [k]
                                ! The latitudinal or y-direction length of the domain.
LENLON = 4000.0                 !   [k]
                                ! The longitudinal or x-direction length of the domain.

ISOTROPIC = True                !   [Boolean] default = False
                                ! If true, an isotropic grid on a sphere (also known as
                                ! a Mercator grid) is used. With an isotropic grid, the
                                ! meridional extent of the domain (LENLAT), the zonal
                                ! extent (LENLON), and the number of grid points in each
                                ! direction are _not_ independent. In MOM the meridional
                                ! extent is determined to fit the zonal extent and the
                                ! number of grid points, while grid is perfectly isotropic.
EQUATOR_REFERENCE = False       !   [Boolean] default = True
                                ! If true, the grid is defined to have the equator at the
                                ! nearest q- or h- grid point to (-LOWLAT*NJGLOBAL/LENLAT).
 
! Vertical grid parameters
MAXIMUM_DEPTH = 4000.0           ! maximum depth of ocean
MINIMUM_DEPTH = 0.5              ! anything shallower is assumed to be land
COORD_CONFIG = "file"      ! use temperature and salinity profiles (read from COORD_FILE) to set layer densities.
COORD_FILE = "coord.nc"
GFS = 9.8                        ! reduced gravity at the free surface
GINT = 9.8E-03                   ! reduced gravity of internal interfaces
THICKNESS_CONFIG = "coord"       ! define layer thicknesses from ale coord
                                 ! A string that determines how the initial layer thicknesses are specified for a new run

! MOM_open_boundary
ROTATION = "betaplane"          ! default = "2omegasinlat"
                                ! This specifies how the Coriolis parameter is specified:
                                !     2omegasinlat - Use twice the planetary rotation rate
                                !       times the sine of latitude.
                                !     betaplane - Use a beta-plane or f-plane.
                                !     USER - call a user modified routine.
F_0 = -1.1570E-04               !   [s-1] default = 0.0
                                ! The reference value of the Coriolis parameter with the
                                ! betaplane option.
BETA = 1.5E-11                  !   [m-1 s-1] default = 0.0
                                ! The northward gradient of the Coriolis parameter with
                                ! the betaplane option.

! Initialization
!TS_CONFIG = "fit"            ! find temperatures consistent with layer densities and S_REF
T_REF = 10.0                 ! reference temperature, the initial temperature of the lightest layer
S_REF = 35.0                 ! reference salinity, the initial salinities
TS_RANGE_T_LIGHT = 10.1      ! the initial temperature of the lightest layer when COORD_CONFIG = "ts_range"
TS_RANGE_T_DENSE = 9.9       ! the initial temperature of the densest layer when COORD_CONFIG = "ts_range"
DENSITY_RANGE = 2.0          ! the range of reference potential densities in the layers

! Physical parameters
C_P = 3900.0       ! heat capacity of sea water

! Time integration parameters
DT = 1200.0                      ! baroclinic dynamics time step (was 1200.0s)
DT_THERM = 1200.0                ! thermodynamcis and tracer advection time step (was 7200.0s)
MIN_Z_DIAG_INTERVAL = 2.16E+04   ! the minimum amount of time in seconds between calculations of
                                 ! depth-space diagnostics, making this > DT_THERM reduces the performance penalty
                                 ! of regridding to depth online
DT_FORCING = 1200.0              ! time step for changing forcing (was 7200.0s)
DTBT = -0.98                     ! barotropic time step 
DTBT_RESET_PERIOD = 0.0          ! the period between recalculations of DTBT (if DTBT <= 0).
BEBT = 0.2                       ! whether barotropic time stepping uses the forward-backward time-
                                 ! stepping scheme (0) or a backward Euler scheme (1).
                                 ! ratio from forward-backward to backward Euler scheme


! Viscosity/Diffusivity parameters
LAPLACIAN = False        ! if true, use a Laplacian horizontal viscosity
!KH_VEL_SCALE = 0.01     ! the velocity scale which is multiplied by the grid spacing 
                         ! to calculate the Laplacian viscosity
!AH_VEL_SCALE = 0.05     ! the velocity scale which is multiplied by the cube of the grid spacing
                         ! to calculate the biharmonic viscosity
SMAGORINSKY_AH = False   ! if true, use a biharmonic Smagorinsky nonlinear eddy viscosity
!SMAG_BI_CONST = 0.06    ! the nondimensional biharmonic Smagorinsky constant, typically 0.015 - 0.06
BIHARMONIC = True  ! use a biharmonic horizontal viscosity
AH = 1.0E+10       ! the background biharmonic horizontal viscosity
HMIX_FIXED = 0.5   ! the prescribed depth over which the near-surface viscosity and diffusivity 
                   ! are elevated when the bulk mixed layer is not used, unit: m.
KV = 1.0E-04       ! the background kinematic viscosity in the interior
KD = 1.0E-05       ! the background diapycnal diffusivity of density in the interior
KD_MAX = 0.1       ! the maximum permitted increment for the diapycnal diffusivity from TKE-based parameterizations
KD_MIN = 2.0E-06   ! the minimum diapycnal diffusivity 
KHTH = 10.0        ! the background horizontal thickness diffusivity
KHTH_MAX = 900.0   ! the maximum horizontal thickness diffusivity.
THICKNESSDIFFUSE = False         ! if True, interface heights are diffused with a coefficent of KHTH
THICKNESSDIFFUSE_FIRST = True    ! if true, do thickness diffusion before dynamics

TKE_DECAY = 10.0                 ! The ratio of the natural Ekman depth to the TKE decay scale. 
BBL_MIXING_AS_MAX = False        ! If true, take the maximum of the diffusivity from the BBL mixing and 
                                 ! the other diffusivities.
                                 ! Otherwise, diffusiviy from the BBL_mixing is simply added.
USE_LOTW_BBL_DIFFUSIVITY = True  ! If true, uses a simple, imprecise but non-coordinate dependent, model 
                                 ! of BBL mixing diffusivity based on Law of the Wall.
HENYEY_IGW_BACKGROUND = False    ! If true, use a latitude-dependent scaling for the near surface background diffusivity
                                 ! as described in Harrison & Hallberg, JPO 2008.
N2_FLOOR_IOMEGA2 = 0.0           ! The floor applied to N2(k) scaled by Omega^2:
                                 !  If =0., N2(k) is simply positive definite.
                                 !  If =1., N2(k) > Omega^2 everywhere.
INT_TIDE_DISSIPATION = False     ! If true, use an internal tidal dissipation scheme to drive diapycnal mixing, 
                                 ! along the lines of St. Laurent et al. (2002) and Simmons et al. (2004).

! Lateral mixing coeffs
KHTH_SLOPE_CFF = 0.25      ! nondimensional coefficient in the Visbeck formula for the interface depth diffusivity
KHTR_SLOPE_CFF = 0.25      ! nondimensional coefficient in the Visbeck formula for the epipycnal tracer diffusivity
USE_VARIABLE_MIXING = True   ! If true, the variable mixing code will be called.
                             ! This allows diagnostics to be created even if the scheme is not used.
                             ! If KHTR_SLOPE_CFF>0 or  KhTh_Slope_Cff>0, 
                             ! this is set to true regardless of what is in the parameter file.
                             ! KHTR_SLOPE_CFF > 0, USE_VARIABLE_MIXING = True
RESOLN_SCALED_KH = True      ! If true, the Laplacian lateral viscosity is scaled away
                             ! when the first baroclinic deformation radius is well resolved.
VARMIX_KTOP = 6              ! The layer number at which to start vertical integration 
                             ! of S*N for purposes of finding the Eady growth rate
VISBECK_L_SCALE = 3.0E+04    ! The fixed length scale in the Visbeck formula.

! Bottom drag
BOTTOMDRAGLAW = True    ! bottom stress is calculated with a drag law of the form c_drag*|u|*u
HBBL = 10.0             ! the thickness over which near-bottom velocities are averaged
DRAG_BG_VEL = 0.1       ! an unresolved velocity that is combined with the resolved velocity 
                        ! to estimate the velocity magnitude
BBL_USE_EOS = True      ! use the equation of state in determining the properties of the bottom boundary layer
BBL_THICK_MIN = 0.1     ! the minimum bottom boundary layer thickness that can be used with BOTTOMDRAGLAW
CHANNEL_DRAG = False    ! free slip sides in mitgcm
                        ! if true, the bottom drag is exerted directly on each
                        ! layer proportional to the fraction of the bottom it overlies


! Surface forcing
BUOY_CONFIG = "file"                ! read buoyancy forcing from the file
LONGWAVE_FILE = "forcing.nc"        ! longwave heat flux, "LW"
SHORTWAVE_FILE = "forcing.nc"       ! shortwave heat flux, "SW"
EVAPORATION_FILE = "forcing.nc"     ! evaporative flux, "evap"
LATENTHEAT_FILE = "forcing.nc"      ! latent heat flux, "latent"
SENSIBLEHEAT_FILE = "forcing.nc"    ! sensible heat flux, "sensible"
RAIN_FILE = "forcing.nc"            ! liquid precip, "liq_precip"
SNOW_FILE = "forcing.nc"            ! frozen precip, "froz_precip"
RUNOFF_FILE = "forcing.nc"          ! runoff, "liq_runoff" and "froz_runoff"
SSTRESTORE_FILE = "forcing.nc"      ! SST restoring, "SST"
SALINITYRESTORE_FILE = "forcing.nc" ! SSS restoring, "SSS"
WIND_CONFIG = "file"       ! read wind forcing from the file
WIND_FILE = "forcing.nc"   ! the file in which the wind stresses are found 
WINDSTRESS_X_VAR = "taux"  ! the name of the x-wind stress variable in WIND_FILE
WINDSTRESS_Y_VAR = "tauy"  ! the name of the y-wind stress variable in WIND_FILE
WINDSTRESS_STAGGER = "A"   ! how the wind stress components are staggered in WIND_FILE
RESTOREBUOY = True         ! the buoyancy fluxes drive the model back toward some specified surface state
                           ! with a rate given by FLUXCONST
FLUXCONST = 1.0            ! relates the restoring surface fluxes to the relative surface anomalies

! Simulation parameters
BOUND_SALINITY = True         ! if true, limit salinity to being positive
BOUND_CORIOLIS = True         ! if true, the Coriolis terms at u-points are bounded by the four estimates 
                              ! of (f+rv)v from the four neighboring v-points, and similarly at v-points
SAVE_INITIAL_CONDS = True     ! if true, write the initial conditions to a file given by IC_OUTPUT_FILE
                              ! IC_OUTPUT_FILE = 'MOM_IC' (default)
MAXVEL = 6.0                  ! the maximum velocity allowed before the velocity components are truncated
MAXTRUNC = 5000               ! the run will be stopped, and the day set to a very large value 
                              ! if the velocity is truncated more than MAXTRUNC times between energy saves

U_TRUNC_FILE = "U_velocity_truncations"
V_TRUNC_FILE = "V_velocity_truncations"

! I/O and simulation length
ENERGYSAVEDAYS = 0.5       ! the interval in units of TIMEUNIT between saves of 
                           ! the energies of the run and other globally summed diagnostics
INPUTDIR = "INPUT"

! EOS
EQN_OF_STATE = "LINEAR"    ! ocean equation of state 
RHO_T0_S0 = 1010.3         ! density at T=0, S=0
DRHO_DT = -0.21            ! The partial derivative of density with potential tempetature, in kg m-3 K-1.
DRHO_DS = 0.77             ! The partial derivative of density with salinity, in kg m-3 psu-1.

! Tracer_flow_control
USE_IDEAL_AGE_TRACER = True  ! if true, use the ideal_age_example tracer package

! MOM_tracer_hor_diff
KHTR = 10.0                  ! The background along-isopycnal tracer diffusivity.
KHTR_MIN = 50.0              ! The minimum along-isopycnal tracer diffusivity.
KHTR_MAX = 900.0             ! The maximum along-isopycnal tracer diffusivity.
KHTR_PASSIVITY_COEFF = 3.0   ! The coefficient that scales deformation radius over grid-spacing in passivity, 
                             ! where passivity is the ratio between along isopycnal mixing of tracers to
                             ! thickness mixing.
                             ! A non-zero value enables this parameterization.                             

! Others 
FRAZIL = False      ! If true, water freezes if it gets too cold, and the accumulated heat deficit 
                    ! is returned in the surface state
                    ! FRAZIL is only used if ENABLE_THERMODYNAMICS is True.
USE_MEKE = False    ! If true, turns on the MEKE scheme which calculates a sub-grid 
                    ! mesoscale eddy kinetic energy budget

! Continuity PPM
!    PPM - use a positive-definite (or monotonic)
!          piecewise parabolic reconstruction solver.
ETA_TOLERANCE = 1.0E-06       ! The tolerance for the differences between the barotropic and baroclinic estimates
                              ! of the sea surface height due to the fluxes through each face.
VELOCITY_TOLERANCE = 1.0E-04  ! The tolerance for barotropic velocity discrepancies between 
                              ! the barotropic solution and the sum of the layer thicknesses

! PressureForce_AFV (analytic finite volume)
MASS_WEIGHT_IN_PRESSURE_GRADIENT = True ! If true, use mass weighting when interpolation T/S for 
                                        ! top/bottom integrals in AFV pressure gradient calculation.

! Mixed Layer
DYNAMIC_VISCOUS_ML = True  ! If true, use a bulk Richardson number criterion to 
                           ! determine the mixed layer thickness for viscosity.
!ML_USE_OMEGA = True       ! depricated
                           ! If true, use absolute rotation rate instead of the vertical component of rotation when
                           ! setting the decay scale for mixed layer turbulence.
ML_OMEGA_FRAC = 1.0        !   [nondim] default = 0.0
                           ! When setting the decay scale for turbulence, use this
                           ! fraction of the absolute rotation rate blended with the
                           ! local value of f, as sqrt((1-of)*f^2 + of*4*omega^2).
ML_RADIATION = True        ! If true, allow a fraction of TKE available from wind work to penetrate
                           ! below the base of the mixed layer with a vertical decay scale 
                           ! determined by the minimum of: (1) The depth of the mixed layer, (2) an Ekman length scale  
ML_RAD_COEFF = 0.1         ! The coefficient which scales MSTAR*USTAR^3 to obtain the energy available 
                           ! for mixing below the base of the mixed layer. This is only used if ML_RADIATION is true.
MSTAR = 0.3                ! The ratio of the friction velocity cubed to the TKE input to the mixed layer.
BULK_RI_ML = 0.05          ! The efficiency with which mean kinetic energy released by mechanically forced entrainment
                           ! of the mixed layer is converted to turbulent kinetic energy.
HMIX_MIN = 2.0             ! The minimum mixed layer depth if the mixed layer depth is determined dynamically.
MIXEDLAYER_RESTRAT = False ! If true, a density-gradient dependent re-stratifying flow is imposed 
                           ! in the mixed layer. Can be used in ALE mode without restriction
                           ! but in layer mode can only be used if BULKMIXEDLAYER is true.


! Barotropic
BOUND_BT_CORRECTION = True       ! corrective pseudo mass-fluxes into the
                                 ! barotropic solver are limited to values that
                                 ! require less than 0.1*MAXVEL
BT_PROJECT_VELOCITY = True       ! if true, step the barotropic velocity first and project out the velocity tendancy
                                 ! by 1+BEBT when calculating the transport.
BT_THICK_SCHEME = "FROM_BT_CONT" ! the scheme that is used to set the open face areas used for barotropic transport 
                                 ! and the relative weights of the accelerations
                                 ! use the average thicknesses kept in the h_u and h_v fields of the BT_cont_type

! User defined
USER_CHANGE_DIFFUSIVITY = True   ! If true, call user-defined code to change the diffusivity
USER_KD_ADD = 5.0E-03
USER_KD_ADD_LAT_RANGE = 1150.0,1250.0,1250.0,1250.0
USER_KD_ADD_RHO_RANGE = 1000,1010,1040,1040 
USER_KD_ADD_USE_ABS_LAT = False
STORE_KD_ADD = True              ! Save the added diffusivity as a diagnostic if true.

! MOM_kappa_shear
! Parameterization of shear-driven turbulence following Jackson, Hallberg and Legg, JPO 2008
USE_JACKSON_PARAM = False        ! If true, use the Jackson-Hallberg-Legg (JPO 2008) shear mixing parameterization.
MAX_RINO_IT = 25                 ! The maximum number of iterations that may be used to estimate 
                                 ! the Richardson number driven mixing.

! MOM_KPP
! This is the MOM wrapper to CVmix:KPP
! See http://code.google.com/p/cvmix/
USE_KPP = False    ! If true, turns on the [CVmix] KPP scheme of Large et al., 1994,
                   ! to calculate diffusivities and non-local transport in the OBL.

! MOM_diffConvection
USE_CONVECTION = True           ! If true, turns on the diffusive convection scheme that increases diapycnal 
                                ! diffusivities at statically unstable interfaces.
                                ! Relevant parameters are contained in the CONVECTION% parameter block.
CONVECTION%
PASSIVE = False                 ! If True, puts KPP into a passive-diagnostic mode.
KD_CONV = 100.0                 !   [m2/s] default = 1.0
                                ! DIffusivity used in statically unstable regions of column.
%CONVECTION

! MOM_entrain_diffusive
MAX_ENT_IT = 20                 ! The maximum number of iterations that may be used to calculate
                                ! the interior diapycnal entrainment.
TOLERANCE_ENT = 1.0E-05         ! The tolerance with which to solve for entrainment values.




ARCHAIC_OMIP_FORCING_FILE = False  ! If true, use the forcing variable decomposition from 
                                   ! the old German OMIP prescription that predated CORE.
                                   ! If false, use the variable groupings available from MOM
                                   ! output diagnostics of forcing variables.

MAXCPU = 2.88E+04     ! The maximum amount of cpu time per processor for which MOM should run before saving a restart
                      ! file and quiting with a return value that indicates that further execution is required to
                      ! complete the simulation, in wall-clock seconds.

RESTART_CONTROL = 3   ! An integer whose bits encode which restart files are written.
RESTINT = 365.0       ! The time between saves of the restart file.

USE_REGRIDDING = True              ! If True, use the ALE algorithm (regridding/remapping).
BULKMIXEDLAYER = False             ! BULKMIXEDLAYER can not be used with USE_REGRIDDING.

REGRIDDING_COORDINATE_MODE = "Z*"  ! Coordinate mode for vertical regridding.
ALE_COORDINATE_CONFIG = "FILE:vgrid.nc,dz"
              
CFL_TRUNCATE_RAMP_TIME = 7200.     ! The time over which the CFL trunction value is ramped up 
                                   ! at the beginning of the run.

!DIAG_REMAP_Z_GRID_DEF = "FILE:vgrid.nc,z"

!Z_OUTPUT_GRID_FILE = "vgrid.nc"    ! The file that specifies the vertical grid for depth-space diagnostics, 
                                   ! or blank to disable depth-space output.
                                   ! default = ""
!WRITE_GEOM = 2                     ! If =0, never write the geometry and vertical grid files.
                                   ! If =1, write the geometry and vertical grid files only for a new simulation.
                                   ! If =2, always write the geometry and vertical grid files.
                                   ! Other values are invalid.




! MOM_diag_mediator
NUM_DIAG_COORDS = 1                ! The number of diagnostic vertical coordinates to use.
                                   ! For each coordinate, an entry in DIAG_COORDS must be provided.
DIAG_COORDS = "z Z ZSTAR" 
!DIAG_COORDS = "z 01 ZSTAR, rho 02 RHO"  ! A list of string tuples associating diag_table modules to
                                   ! a coordinate definition used for diagnostics.
                                   ! Each string is of the form "MODULE_SUFFIX PARAMETER_SUFFIX COORDINATE_NAME".
!DIAG_COORD_DEF_01 = "FILE:vgrid.nc,interfaces=zt"   ! Determines how to specify the coordinate positions.
!DIAG_COORD_DEF_02 = "FILE:coord.nc,interfaces=Layer"


! MOM_state_initialization
INIT_LAYERS_FROM_Z_FILE = True     !   [Boolean] default = False
                                   ! If true, intialize the layer thicknesses, temperatures,
                                   ! and salnities from a Z-space file on a latitude-
                                   ! longitude grid.

! MOM_initialize_layers_from_Z
TEMP_SALT_Z_INIT_FILE = "temp_salt_z.nc" ! default = "temp_salt_z.nc"
                                   ! The name of the z-space input file used to initialize
                                   ! the layer thicknesses, temperatures and salinities.
Z_INIT_FILE_PTEMP_VAR = "PTEMP"    ! default = "ptemp"
                                   ! The name of the potential temperature variable in
                                   ! TEMP_SALT_Z_INIT_FILE.
Z_INIT_FILE_SALT_VAR = "SALT"      ! default = "salt"
                                   ! The name of the salinity variable in
                                   ! TEMP_SALT_Z_INIT_FILE.
Z_INIT_ALE_REMAPPING = True        !   [Boolean] default = False
                                   ! If True, then remap straight to model coordinate from file.




